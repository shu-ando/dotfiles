set nocompatible
set t_Co=256

" BASIC SETTINGS {{{1
set autoread
set hidden
set switchbuf=useopen
set nowritebackup
set noswapfile
set nobackup
set clipboard=unnamedplus,autoselect

set tabstop=4
set shiftwidth=4
set softtabstop=4
set autoindent

set backspace=indent,eol,start
set formatoptions=lmoq
set whichwrap=b,s,h,l,>,<,[,]
set matchpairs& matchpairs+=<:>

set wildmenu
set wildmode=list:full

set virtualedit+=block
set wrapscan
set ignorecase
set smartcase
set hlsearch
"set incsearch

function! ZenkakuSpace()
	highlight ZenkakuSpace cterm=underline ctermfg=darkgray gui=underline
endfunction
if has('syntax')
	augroup ZenkakuSpace
		autocmd!
		autocmd ColorScheme       * call ZenkakuSpace()
		autocmd VimEnter,WinEnter * match ZenkakuSpace /　/
	augroup END
	call ZenkakuSpace()
endif
set display=uhex
set cursorline
set showmatch
set matchtime=3
set showcmd
set showmode
set number
set wrap
if exists('&ambiwidth')
	set ambiwidth=double
endif
set list
"◂, ↲,
set listchars=tab:»-,trail:\ ,eol:«,extends:»,precedes:«,nbsp:%
set notitle
" set scrolloff=5
set textwidth=0
set colorcolumn=80

"set showtabline=2
set laststatus=2

set termencoding=utf-8
set encoding=utf-8
set fileencodings=utf-8,sjis,cp932
set fileformat=unix
set ffs=unix,dos

" autocmd BufWritePre * :%s/\s\+$//ge
autocmd BufNewFile,BufRead *.html set ts=2 sw=2 sts=2 et

augroup PrevimSettings
    autocmd!
    autocmd BufNewFile,BufRead *.{md,mdwn,mkd,mkdn,mark*} set filetype=markdown
augroup END

" set printfont="migu 1m:h12"
" set printoptions=number:y
" set printoptions=syntax:a
set printoptions=left:10mm,right:10mm,top:10mm,bottom:10mm
let g:html_use_css = 1
let g:use_xhtml = 1

set foldmethod=marker
" colorscheme molokai
syntax on
" }}}

" KEY MAPPING {{{1
" BASIC MAPPING {{{2
let mapleader=','

inoremap jj <Esc>
nnoremap <silent> <Esc><Esc> :nohlsearch<CR>
vnoremap <silent> * "vy/\V<C-r>=substitute(escape(@v, '\/'), "\n", '\\n', 'g')<CR><CR>
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz
nnoremap j gj
nnoremap k gk
nnoremap / /\v
"}}}
" nmap R <Plug>(operator-replace)

" Toggle {{{2
nnoremap [toggle] <Nop>
nmap T [toggle]
nnoremap <silent> [toggle]s :setl spell!<CR>:setl spell?<CR>
nnoremap <silent> [toggle]l :setl list!<CR>:setl list?<CR>
nnoremap <silent> [toggle]t :setl expandtab!<CR>:setl expandtab?<CR>
nnoremap <silent> [toggle]w :setl wrap!<CR>:setl wrap?<CR>
nnoremap <silent> [toggle]n :setl number!<CR>:setl number?<CR>
nnoremap <silent> [toggle]p :setl paste!<CR>:setl paste?<CR>
"}}}

" Emacs like setting {{{2
inoremap <C-p> <Up>
inoremap <C-n> <Down>
inoremap <C-b> <Left>
inoremap <C-f> <Right>
inoremap <C-e> <End>
inoremap <C-a> <Home>
inoremap <C-h> <Left><C-o>x
" inoremap { {}<LEFT>
" inoremap ( ()<LEFT>
" inoremap [ []<LEFT>
" inoremap " ""<LEFT>

"inoremap <C-d> <Del>
inoremap <C-l> <C-o>zz
inoremap <C-k> <C-o>D
"inoremap <C-u> <C-o>d1
""inoremap <C-x>u <C-o>u
"inoremap <C-y> <C-o>P
"inoremap <C-Space> <C-n>
inoremap <C-x>s <Esc>:w<CR>a
inoremap <C-x>c <Esc>:wq<CR>
"}}}

" CommandLine Emacs like movement {{{2
cnoremap <C-f> <Right>
cnoremap <C-b> <Left>
cnoremap <C-e> <End>
cnoremap <C-a> <Home>
"}}}

" Splitter {{{2
nnoremap <S-Left>  <C-w><<CR>
nnoremap <S-Right> <C-w>><CR>
nnoremap <S-Up>    <C-w>-<CR>
nnoremap <S-Down>  <C-w>+<CR>
"}}}

"}}}

